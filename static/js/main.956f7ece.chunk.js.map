{"version":3,"sources":["api.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoList","todos","selectedTodo","onSelectTodo","className","map","todo","id","title","completed","cn","type","onClick","TodoFilter","query","filter","onQueryChange","onFilterSelect","onDeleteQuery","value","onChange","placeholder","style","pointerEvents","Loader","TodoModal","onCloseModal","useState","user","setUser","useEffect","userId","href","email","name","App","setTodos","setSelectedTodo","setQuery","setFilter","preparedTodos","useMemo","toLowerCase","includes","trim","event","target","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.956f7ece.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo?: Todo | null;\n  onSelectTodo?: (todo: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo = null,\n  onSelectTodo = () => { },\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => {\n        const {\n          id,\n          title,\n          completed,\n        } = todo;\n\n        return (\n          <tr\n            key={id}\n            data-cy=\"todo\"\n            className={cn({\n              'has-background-info-light': selectedTodo?.id === id,\n            })}\n          >\n            <td className=\"is-vcentered\">\n              {id}\n            </td>\n            <td className=\"is-vcentered\">\n              {completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={cn({\n                'has-text-success': completed,\n                'has-text-danger': !completed,\n              })}\n              >\n                {title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onSelectTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={cn('far', {\n                      'fa-eye-slash': selectedTodo?.id === id,\n                      'fa-eye': selectedTodo?.id !== id,\n                    })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","type Props = {\n  query: string;\n  filter: string;\n  onQueryChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  onFilterSelect: (event: React.ChangeEvent<HTMLSelectElement>) => void;\n  onDeleteQuery: () => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  filter,\n  onQueryChange,\n  onFilterSelect,\n  onDeleteQuery,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={filter}\n          onChange={onFilterSelect}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={onQueryChange}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={onDeleteQuery}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo;\n  onCloseModal?: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  onCloseModal = () => { },\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(todo.userId).then(setUser);\n  }, [todo.userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onCloseModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed\n                ? (<strong className=\"has-text-success\">Done</strong>)\n                : (<strong className=\"has-text-danger\">Planned</strong>)}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { getTodos } from './api';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [query, setQuery] = useState('');\n  const [filter, setFilter] = useState('all');\n\n  useEffect(() => {\n    getTodos().then(setTodos);\n  }, []);\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const handleQueryDelete = () => {\n    setQuery('');\n  };\n\n  const handleFilterChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setFilter(event.target.value);\n  };\n\n  const preparedTodos = useMemo(() => {\n    const filteredBy = (() => {\n      switch (filter) {\n        case 'completed':\n          return todos.filter(todo => todo.completed);\n        case 'active':\n          return todos.filter(todo => !todo.completed);\n        default:\n          return todos;\n      }\n    })();\n\n    return filteredBy.filter(todo => todo.title.toLowerCase().includes(query.trim().toLowerCase())) || [];\n  }, [todos, filter, query]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                filter={filter}\n                onQueryChange={handleQueryChange}\n                onFilterSelect={handleFilterChange}\n                onDeleteQuery={handleQueryDelete}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todos.length ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={preparedTodos}\n                  selectedTodo={selectedTodo}\n                  onSelectTodo={setSelectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          onCloseModal={() => setSelectedTodo(null)}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}